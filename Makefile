SHELL := /bin/bash

.PHONY: all
all: \
	commitlint \
	openapi-generate \
	go-lint \
	go-review \
	go-test \
	go-build \
	go-mod-tidy \
	git-verify-nodiff

include tools/commitlint/rules.mk
include tools/git-verify-nodiff/rules.mk
include tools/golangci-lint/rules.mk
include tools/goreview/rules.mk
include tools/semantic-release/rules.mk

openapi_base_path := $(PWD)/pkg/routing/v8/openapi

.PHONY: openapi-generate
openapi-generate:
	$(info [$@] generating OpenAPI stubs...)
	@# Routing v8
	@docker run --rm \
		-v $(openapi_base_path):/gen \
		-u $(shell id -u) \
		-e "JAVA_OPTS=-Dmodels -DmodelDocs=false -Dapis -DapiDocs=false -DsupportingFiles=client.go,configuration.go,response.go" \
		openapitools/openapi-generator-cli:v4.3.1 generate \
		-p "packageName=routingv8" \
		-p "enumClassPrefix=true" \
		-i https://developer.here.com/documentation/routing-api/8.3.1/swagger/v8.yaml \
		-g go \
		-o /gen \
		--http-user-agent "einride/here-go"
	@# TODO: Find a way to not generate these folders
	@rm -rf $(openapi_base_path)/api
	@rm -rf $(openapi_base_path)/.openapi-generator
	@rm -rf $(openapi_base_path)/.openapi-generator-ignore
	@# Insert idiomatic Go comments to signal generated code for linters.
	@find $(openapi_base_path) \
		-type f -name '*.go' \
		-exec sed -i '1s#^#// Code generated by OpenAPI Generator. DO NOT EDIT.\n#' {} \+

.PHONY: go-build
go-build:
	$(info [$@] cross-compiling to supported OSes...)
	GOOS=darwin go build ./...
	GOOS=windows go build ./...
	GOOS=linux go build ./...

.PHONY: go-test
go-test:
	$(info [$@] running Go tests...)
	@go test -count 1 -cover -race ./...

.PHONY: go-mod-tidy
go-mod-tidy:
	$(info [$@] tidying Go module files...)
	@go mod tidy -v
